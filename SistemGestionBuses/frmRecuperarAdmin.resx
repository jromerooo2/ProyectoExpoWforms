<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAABWFJREFUeF7t
        W1mIHUUUHfd9X8F//RHBDVHQiEZB3D/8EBTURAUVDSouoAh+qSAS8UcyioIgxp8EFdQIgzEOo3R3dffj
        aWKUKCFiprvqTd7EZZJx2nP73Y7vVdfMvK27Xzdz4HzM1K2693R113Kr3tgoY3Jy93G+01jlOvIB8EXX
        CV/xnfAFX4T3uW7j4omJ6Eg2rQ6iKDrcc4LbPEdt9hz5NxgtSls2PRF+4gt5l2VFR3ET5UVNyBt8R9aN
        YpfnbnDNxo3REdxceUCvsu+oNyFgoU1QvxRChJdz06OPen3f6Qh6iyZiUM7TmEGfE7sZTdRqe8/Bd7zd
        IKCd856QU/jOP3KFfBt/j0Pct54T/qPZGag200DK7kYLnvfHCQjQNgceM4TQJ+vfT5/LVTrg+zOn+bZ6
        CHbbtHo6t05NyZO52ugAvfmuIdiE4ySQTZeFEOpm1NmhtdHOr+r16Gg2Lx6urW4xBEmk1/0JNusJJNAV
        4auGNhO+hzHhMDYvDjRfI5iftOBi+nb4KJv1DbSzBjzQ3m5CWkSxWXFA799jCs4V6i02GRiYUm9Cm6aH
        cMDz1IVsVgzwin9jCGzPsEdr15b3G/xE5L+wTwEj/9kIYj4dlHqETYYKTLGvpXyBtJdgk3wBx7cbApqj
        KZFNhopdE7uORfvp8UbIXwrZSNEglAoG8zgXZwIsmK43+IxcO7yTTfIDr/c7AqH/cXFmaK0cO/2CH3Nx
        foDTcS0IPAD5OhdnBqw47zb43Zf7ZwDH6w2BZP4ALOv34+HroO675gSXsUk+cB31nB6Eb8tPuThTeHbo
        6L5dJ7yXi/MBZoE79CDAvVycKTDofaD7xvjzLBfnA8eZPQuOU0mPmpBXsUlmMD8A+TIX5wc4ntQDAT/k
        4sxA+YSUXxE+z8X5gVZhqUDiNXpwAZtkAmPiRci1XJwfdu6MjsHiZNoQzFRWKSzXDc9L+SNa4RVski8o
        v28KCDvFh9lkqKBX3eDvz8LSZfX69IkI4DctIOIcpqvr2GwoEKJxKtpVmh9QbWKTYrBEVmimZquL2Gxg
        LJZ6o5wBmxQH9ML7xuCEbGLjtJrN+gbGladN7cOvNRLpsR/8mdXYqKTzAy0exIN4kE17hm+Hj6ENU9sL
        nq2uZrPiQIeeCGa/FpyJW1w3OJ+rLYt43S/kG4Z2Eq5n0+LQg3hmfAiygT6Lxc7+6ISJkqqw29NZ93/S
        tpimYa5SDHoXr5PWEGoTpbt4Ot0A0tGaMROckA5df/yueQaHUQyECK5FMAOI74/YcX5B0yGHUQxa0143
        53kxZ9G7M4b/98oFGg8Kv0jRo3hJtz8sq3kmn/TMauXdcofryhs5hOLQj3iuGiNeydlyHc3dKP9Xs9dJ
        WZ/P6cbISFyU4NXeXFuASzElXgcdmFKv+rZ6hl5tOi4nxtlmW91qWeoUNi0ewxZfKlBvQFTX4j0ruISr
        lh8r4lfEG8XqLId42jLyrmorTS387xQqKb51shrf1kwCX8B8/jgXH0IlxVOuDMGa7u5hLy3XsVl1ex7b
        xi8NAg6Rrq9VUjzdtEKwn2nBG7lEJkdnOcQT6KKSQcAgLI94Wkcj4G57tRuq0ogn8P29XzUR/VL5dnAp
        N10eUI9R8JqYXllO8Qno1gRENDRR3bLc4hPQDw4gpteHUA3xCVwneAorP5NQE6slvvWjpa4XOdUSTz9c
        gqi/NJGLcb/vNK7hquUH3dKAqG6zsNUST/Ad+Y5BqIkkfhVXqw4gzNOEmlhN8QSI+1oT20G6XgpeyebV
        gyfkSybhzOr2fILWnVrDT9ls2aSDTTarNrZvC06K3wRb1rAQ+pnu2PRyQWEFpcLY2H8G6SdLQPxbRAAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>